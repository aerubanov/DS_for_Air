version: "2"
services:
  PostgreSQL:
    restart: always
    image: postgres:12.4
    container_name: postgres
    environment:
      - DEBUG=false

      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pgdb
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "127.0.0.1:5432:5432"

  loader:
    restart: always
    build:
      context: ../../src
      dockerfile: ./web/server/loader/Dockerfile
    image: aerubanov/loader
    container_name: loader
    networks:
      - backend
    command: python -m src.web.server.loader.app -u
    depends_on:
            - PostgreSQL
    volumes:
      - "../../DATA:/code/DATA"
      - "./logs:/code/logs"

  api:
    restart: always
    build:
      context: ../../src
      dockerfile: ./web/server/api/Dockerfile
    image: aerubanov/api
    container_name: api
    networks:
      - backend
    ports:
      - "8000:8000"
    depends_on:
      - PostgreSQL
    volumes:
      - "./logs:/code/logs"
    command: gunicorn src.web.server.api.run:app -b 0.0.0.0:8000

  ml:
    restart: always
    build:
      context: ../../src
      dockerfile: ./web/server/ml/Dockerfile
    image: aerubanov/ml
    container_name: ml
    networks:
      - backend
    command: python -m src.web.server.ml.run -u
    depends_on:
      - PostgreSQL
    volumes:
        - "../../models:/code/models"
        - "./logs:/code/logs"

  web_client:
    restart: always
    build:
      context: ../../src
      dockerfile: ./web/client/Dockerfile
    image: aerubanov/web_client
    container_name: web_client
    networks:
      - backend
    ports:
      - "80:5000"
    depends_on:
      - api
    volumes:
      - "./logs:/code/logs"
    command: gunicorn src.web.client.run:app -b 0.0.0.0:5000

  bot:
    restart: always
    build:
      context: ../../src
      dockerfile: ./web/bot/Dockerfile
    image: aerubanov/bot
    container_name: bot
    networks:
      - backend
    volumes:
      - "../../src:/code/src"
      - "./logs:/code/logs"
      - "./bot/database:/code/database"
    command: python -m src.web.bot.bot -u

networks:
  backend: